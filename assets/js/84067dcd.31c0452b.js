"use strict";(self.webpackChunkgaragecraft_games=self.webpackChunkgaragecraft_games||[]).push([[7281],{26:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>i});const l=JSON.parse('{"id":"helios/namespaces/helios-ext-opengl-rendering-model","title":"helios-ext-opengl-rendering-model","description":"Definition","source":"@site/docs/helios/namespaces/helios-ext-opengl-rendering-model.md","sourceDirName":"helios/namespaces","slug":"/helios/namespaces/helios/ext/opengl/rendering/model","permalink":"/docs/helios/namespaces/helios/ext/opengl/rendering/model","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"slug":"/helios/namespaces/helios/ext/opengl/rendering/model","custom_edit_url":null,"toc_max_heading_level":4,"keywords":["doxygen","reference","namespace"]},"sidebar":"tutorialSidebar","previous":{"title":"helios-ext-glfw","permalink":"/docs/helios/namespaces/helios/ext/glfw"},"next":{"title":"helios-ext-opengl-rendering-shader","permalink":"/docs/helios/namespaces/helios/ext/opengl/rendering/shader"}}');var o=n(4848),t=n(8453);const r={slug:"/helios/namespaces/helios/ext/opengl/rendering/model",custom_edit_url:null,toc_max_heading_level:4,keywords:["doxygen","reference","namespace"]},a="model Namespace",d={},i=[{value:"Definition",id:"definition",level:2},{value:"Classes Index",id:"classes-index",level:2}];function c(e){const s={a:"a",code:"code",div:"div",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",table:"table",tbody:"tbody",td:"td",tr:"tr",...(0,t.R)(),...e.components};return(0,o.jsxs)(s.div,{className:"doxyPage",children:["\n",(0,o.jsx)(s.header,{children:(0,o.jsxs)(s.h1,{id:"model-namespace",children:[(0,o.jsx)(s.code,{children:"model"})," Namespace"]})}),"\n",(0,o.jsx)(s.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsx)(s.div,{className:"doxyDefinition",children:"\nnamespace helios::ext::opengl::rendering::model { ... }\n"}),"\n",(0,o.jsx)(s.h2,{id:"classes-index",children:"Classes Index"}),"\n\n\n",(0,o.jsx)(s.table,{className:"doxyMembersIndex",children:(0,o.jsxs)(s.tbody,{children:[(0,o.jsxs)(s.tr,{className:"doxyMemberIndexItem",children:[(0,o.jsx)(s.td,{className:"doxyMemberIndexItemType",vAlign:"top",style:{textAlign:"left"},children:"class"}),(0,o.jsx)(s.td,{className:"doxyMemberIndexItemName",vAlign:"top",style:{textAlign:"left"},children:(0,o.jsx)(s.a,{href:"/docs/helios/classes/helios/ext/opengl/rendering/model/openglmesh",children:"OpenGLMesh"})})]}),(0,o.jsxs)(s.tr,{className:"doxyMemberIndexDescription",children:[(0,o.jsx)(s.td,{className:"doxyMemberIndexDescriptionLeft"}),(0,o.jsxs)(s.td,{className:"doxyMemberIndexDescriptionRight",children:["\n",(0,o.jsxs)(s.p,{children:["Representative of an ",(0,o.jsx)(s.a,{href:"/docs/helios/classes/helios/ext/opengl/rendering/model/openglmesh",children:"OpenGLMesh"}),". This class manages the OpenGL Vertex Array Object (VAO), the Vertex Buffer Object (VBO) and Element Buffer Object (EBO) handles. The raw MeshData is uploaded to the GPU, preparing it for subsequent rendering commands / draw calls. ",(0,o.jsx)(s.a,{href:"/docs/helios/classes/helios/ext/opengl/rendering/model/openglmesh/#details",children:"More..."})]}),"\n"]})]}),(0,o.jsx)(s.tr,{className:"doxyMemberIndexSeparator",children:(0,o.jsx)(s.td,{className:"doxyMemberIndexSeparator",colSpan:"2"})})]})}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsxs)(s.p,{className:"doxyGeneratedBy",children:["Generated via ",(0,o.jsx)(s.a,{href:"https://xpack.github.io/doxygen2docusaurus",children:"doxygen2docusaurus"})," 2.0.0 by ",(0,o.jsx)(s.a,{href:"https://www.doxygen.nl",children:"Doxygen"})," 1.9.8."]}),"\n"]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var l=n(6540);const o={},t=l.createContext(o);function r(e){const s=l.useContext(t);return l.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),l.createElement(t.Provider,{value:s},e.children)}}}]);