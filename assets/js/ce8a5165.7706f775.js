"use strict";(self.webpackChunkgaragecraft_games=self.webpackChunkgaragecraft_games||[]).push([[6579],{8349:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>d});var n=o(9530),a=o(4848),r=o(8453);const s={title:"Lost in Translation",tags:["devlog","helios"]},i=void 0,l={authorsImageUrls:[]},d=[];function c(e){const t={a:"a",code:"code",em:"em",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"My background is in the web world - I've spent years wrangling Java, JavaScript (and countless frameworks based on it), PHP (from Zend to Laravel over Symfony and self-written solution), and the closest I ever got to the metal was writing C, of which I thought it would give me a head start for a game engine project. In a way, it did: I wasn't scared of pointers. But it also gave me a false sense of security."}),"\n",(0,a.jsxs)(t.p,{children:["Moving to C++ is like a profound culture shock. The language demands a completely different level of discipline. Suddenly, it's not just about maintaining memory, it's also about ownership. The concept of smart pointers, and the critical role of a destructor is a universe away from the cozy safety of a ",(0,a.jsx)(t.a,{href:"https://www.oracle.com/webfolder/technetwork/tutorials/obe/java/gc01/index.html",children:"garbage collector \u2764\ufe0f"})," or ",(0,a.jsx)(t.code,{children:"=="})," out of the box. (I now understand the motivation behind Java better.)"]}),"\n",(0,a.jsxs)(t.p,{children:["And that's before you even get to the build process: No more ",(0,a.jsx)(t.em,{children:"save and refresh"})," and ",(0,a.jsx)(t.em,{children:"hot reloads"}),". Here, you enter a three-act play with the compiler, the linker, and a mysterious director named VisualStudio 2022 and its ever so confusing tree menus and option dialogs. I guess it's time to get familiar with compiler command line options, since they play such a crucial role in C++..."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>i});var n=o(6540);const a={},r=n.createContext(a);function s(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(r.Provider,{value:t},e.children)}},9530:e=>{e.exports=JSON.parse('{"permalink":"/devlog/2025/08/16/lost-in-translation","source":"@site/devlog/2025-08-16-lost-in-translation/index.md","title":"Lost in Translation","description":"My background is in the web world - I\'ve spent years wrangling Java, JavaScript (and countless frameworks based on it), PHP (from Zend to Laravel over Symfony and self-written solution), and the closest I ever got to the metal was writing C, of which I thought it would give me a head start for a game engine project. In a way, it did: I wasn\'t scared of pointers. But it also gave me a false sense of security.","date":"2025-08-16T00:00:00.000Z","tags":[{"inline":true,"label":"devlog","permalink":"/devlog/tags/devlog"},{"inline":true,"label":"helios","permalink":"/devlog/tags/helios"}],"readingTime":1.11,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Lost in Translation","tags":["devlog","helios"]},"unlisted":false,"prevItem":{"title":"Sundays are for constexpr","permalink":"/devlog/2025/08/17/helios-engine-foundation"},"nextItem":{"title":"Hello World","permalink":"/devlog/2025/08/15/hello-world"}}')}}]);