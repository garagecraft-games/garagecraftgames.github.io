"use strict";(self.webpackChunkgaragecraft_games=self.webpackChunkgaragecraft_games||[]).push([[241],{2905:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/screenshot-38dc25e9536d616096eaeb4e145123c2.png"},3428:(e,t,n)=>{n.d(t,{R:()=>s});var a=n(4164),i=(n(6540),n(4848));const r=[{name:"GitHub",url:"https://github.com/garagecraft-games",svg:(0,i.jsxs)("svg",{role:"img",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("title",{children:"GitHub"}),(0,i.jsx)("path",{d:"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"})]})},{name:"X",url:"https://x.com/grgcrft_games",svg:(0,i.jsxs)("svg",{role:"img",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg","aria-label":"X",children:[(0,i.jsx)("title",{children:"X"}),(0,i.jsx)("path",{d:"M12.6.75h2.454l-5.36 6.142L16 15.25h-4.937l-3.867-5.07-4.425 5.07H.316l5.733-6.57L0 .75h5.063l3.495 4.633L12.601.75Zm-.86 13.028h1.36L4.323 2.145H2.865z",transform:"scale(1.5)"})]})},{name:"BlueSky",url:"https://bsky.app/profile/garagecraft.games",svg:(0,i.jsxs)("svg",{viewBox:"0 0 511.999 452.266",children:[(0,i.jsx)("title",{children:"BlueSky"}),(0,i.jsx)("path",{d:"M110.985 30.442c58.695 44.217 121.837 133.856 145.013 181.961 23.176-48.105 86.322-137.744 145.016-181.961 42.361-31.897 110.985-56.584 110.985 21.96 0 15.681-8.962 131.776-14.223 150.628-18.272 65.516-84.873 82.228-144.112 72.116 103.55 17.68 129.889 76.238 73 134.8-108.04 111.223-155.288-27.905-167.385-63.554-3.489-10.262-2.991-10.498-6.561 0-12.098 35.649-59.342 174.777-167.382 63.554-56.89-58.562-30.551-117.12 72.999-134.8-59.239 10.112-125.84-6.6-144.112-72.116C8.962 184.178 0 68.083 0 52.402c0-78.544 68.633-53.857 110.985-21.96z"})]})},{name:"LinkedIn",url:"https://www.linkedin.com/company/garagecraft-games",svg:(0,i.jsxs)("svg",{role:"img",viewBox:"0 0 24 24",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsx)("title",{children:"LinkedIn"}),(0,i.jsx)("path",{d:"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"})]})},{name:"Twitch",url:"https://twitch.tv/garagecraft_games",svg:(0,i.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512",children:[(0,i.jsx)("rect",{width:"512",height:"512",rx:"15%",fill:"#48e65e"}),(0,i.jsx)("path",{d:"m115 101-22 56v228h78v42h44l41-42h63l85-85v-199zm260 185-48 48h-78l-42 42v-42h-65v-204h233zm-48-100v85h-30v-85zm-78 0v85h-29v-85z",fill:"#0d0d27"})]})}],s=function(){const e=r.map(({name:e,url:t,svg:n})=>(0,i.jsx)("div",{className:(0,a.A)("col","socialLink"),children:(0,i.jsx)("a",{href:t,target:"_blank",className:(0,a.A)("button button--outline button--primary","btn"),children:(0,i.jsx)("span",{className:"btnIcon",children:n})})},e));return(0,i.jsx)("div",{className:"container socialContainer",children:(0,i.jsx)("div",{className:(0,a.A)("row"),children:e})})}},4580:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>h,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var a=n(8760),i=n(4848),r=n(8453),s=n(3428);const o={slug:"CMake-has-entered-the-chat",title:"CMake has entered the chat",tags:["devlog"],keywords:["indiedev","gamedev","solodev","cpp","programming","benchmarking","cmake","backseatcoding","indiegames"]},h=void 0,c={authorsImageUrls:[]},l=[{value:"Refactoring and Benchmarking: helios.math.core",id:"refactoring-and-benchmarking-heliosmathcore",level:2},{value:"Benchmarking Guid Pointer To Implementation",id:"benchmarking-guid-pointer-to-implementation",level:3},{value:"A New Workflow: CLion and CMake",id:"a-new-workflow-clion-and-cmake",level:2},{value:"Join Me on the Journey",id:"join-me-on-the-journey",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Today was all about strengthening the core of Helios: First, a deep dive into refactoring ",(0,i.jsx)(t.code,{children:"mat4"})," and ",(0,i.jsx)(t.code,{children:"vec3"}),", and second, a shift in the tools I use to build it."]}),"\n",(0,i.jsx)(t.h2,{id:"refactoring-and-benchmarking-heliosmathcore",children:"Refactoring and Benchmarking: helios.math.core"}),"\n",(0,i.jsxs)(t.p,{children:["Until now, types like ",(0,i.jsx)(t.code,{children:"vec3"})," and ",(0,i.jsx)(t.code,{children:"mat4"})," were part of a broader module. Today, I took the time to refactor them into ",(0,i.jsx)(t.code,{children:"helios.math.core"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["By isolating these core components, I hope to ensure a more fine grained soc right from the beginning. And speaking of optimization, I dep now on ",(0,i.jsx)(t.a,{href:"https://github.com/google/benchmark",children:"Google Benchmark"})," and put ",(0,i.jsx)(t.code,{children:"mat4"})," to the test.\nThe power house surely is ",(0,i.jsx)(t.a,{href:"https://github.com/g-truc/glm",children:"GLM"})," (OpenGL Mathematics  library), which I frequently used. However, to get a hang of C++ I decided to implement some of the (basic) requirements myself."]}),"\n",(0,i.jsx)(t.p,{children:"Here's a look at the numbers:"}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(8823).A+"",width:"2048",height:"974"})})}),"\n",(0,i.jsx)(t.p,{children:"In both constructor and multiplication tests, the helios implementation shows a promising performance - granted, I'm nowhere close to the optimizations of glm which sports much, much more functionality than my basic implementations, but its nonetheless nice to see how the two compare."}),"\n",(0,i.jsx)(t.h3,{id:"benchmarking-guid-pointer-to-implementation",children:"Benchmarking Guid Pointer To Implementation"}),"\n",(0,i.jsxs)(t.p,{children:["Remember my bold claim about the",(0,i.jsx)(t.a,{href:"/devlog/helios-engine-foundation",children:"performance drawbacks of pointer-to-implementation and heap allocation"}),"? I\u2019ve put together a benchmark ",(0,i.jsx)(t.a,{href:"https://github.com/garagecraft-games/helios/blob/main/benchmarks/helios/util/Guid.benchmark.cpp",children:"here"}),", comparing the regular and PIMPL versions. As expected, the latter comes with a noticeable performance hit:"]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Benchmark"}),(0,i.jsx)(t.th,{children:"Time"}),(0,i.jsx)(t.th,{children:"Time (CPU)"}),(0,i.jsx)(t.th,{children:"Iterations"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"BM_GuidGenerate"}),(0,i.jsx)(t.td,{children:"8.70 ns"}),(0,i.jsx)(t.td,{children:"8.40 ns"}),(0,i.jsx)(t.td,{children:"83,743,377"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"BM_GuidPimplGenerate"}),(0,i.jsx)(t.td,{children:"92.3 ns"}),(0,i.jsx)(t.td,{children:"92.7 ns"}),(0,i.jsx)(t.td,{children:"7,920,792"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"a-new-workflow-clion-and-cmake",children:"A New Workflow: CLion and CMake"}),"\n",(0,i.jsxs)(t.p,{children:["I\u2019m parting ways with MSVS (for now) and embracing a more automated, cross-platform workflow with CLion and CMake. The goal is to let modern tooling take care of the heavy lifting, especially with dependency management: It turned out that incorporating Google Benchmark was too much of a hassle (for me at last), but CMake did the trick in no time. I also feel pretty much right at home coming from ",(0,i.jsx)(t.a,{href:"https://getcomposer.org",children:"composer"}),", ",(0,i.jsx)(t.a,{href:"https://packagist.org",children:"packagist"})," and ",(0,i.jsx)(t.a,{href:"https://www.npmjs.com",children:"npm"}),"."]}),"\n",(0,i.jsx)("center",{children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(2905).A+"",width:"3828",height:"2085"})})}),"\n",(0,i.jsx)(t.p,{children:"It wasn't without its challenges, and I'm still navigating the learning curve, but the potential benefits in productivity and project maintainability are promising."}),"\n",(0,i.jsx)(t.h2,{id:"join-me-on-the-journey",children:"Join Me on the Journey"}),"\n",(0,i.jsxs)(t.p,{children:["I streamed this entire process live on ",(0,i.jsx)(t.a,{href:"https://www.twitch.tv/garagecraft_games",children:"Twitch"}),". If you want to see the code, the benchmarks, and the occasional head-scratching moment as I stumbled through the new CMake setup, you can ",(0,i.jsx)(t.a,{href:"https://youtube.com/live/FKKh15M_bzY",children:"catch the VOD here"}),"."]}),"\n",(0,i.jsx)(s.R,{})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var a=n(6540);const i={},r=a.createContext(i);function s(e){const t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),a.createElement(r.Provider,{value:t},e.children)}},8760:e=>{e.exports=JSON.parse('{"permalink":"/devlog/CMake-has-entered-the-chat","source":"@site/devlog/2025-08-23-cmake-has-entered-the-chat/index.mdx","title":"CMake has entered the chat","description":"Today was all about strengthening the core of Helios: First, a deep dive into refactoring mat4 and vec3, and second, a shift in the tools I use to build it.","date":"2025-08-23T00:00:00.000Z","tags":[{"inline":true,"label":"devlog","permalink":"/devlog/tags/devlog"}],"readingTime":2.14,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"CMake-has-entered-the-chat","title":"CMake has entered the chat","tags":["devlog"],"keywords":["indiedev","gamedev","solodev","cpp","programming","benchmarking","cmake","backseatcoding","indiegames"]},"unlisted":false,"nextItem":{"title":"Sundays are for constexpr","permalink":"/devlog/helios-engine-foundation"}}')},8823:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/benchmark_mat4-74ccdfeb884c09d7b1db62fc74485d38.png"}}]);